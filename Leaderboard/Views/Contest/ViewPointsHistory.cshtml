@model AllPointsQueryModel
@{
	ViewBag.Title = "All Points For Team " + Model.TeamName;
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
	<div class="row justify-content-center">
		<div class="form-group col-md-2 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="SearchPoints"></label>
				<input asp-for="SearchPoints" type="number" class="form-control" placeholder="Search by points...">
			</div>
		</div>
		<div class="col-md-2">
			<label>Search by description</label>
			<input asp-for="SearchTerm" class="form-control" placeholder="Search by description...">
		</div>
		<div class="col-md-2">
			<label asp-for="SearchUserEmail"></label>
			<input asp-for="SearchUserEmail" class="form-control" placeholder="Search by user email...">
		</div>
		<div class="col-md-2">
			<br />
			<input type="submit" value="Search" class="btn btn-success" />
		</div>
	</div>
</form>
<br />

@if (!Model.Entities.Any())
{
	<div class="customNoResultsFoundMessage">
		<h3 class="text-center text-danger">No points records found by these search criteria!</h3>
	</div>
}
else
{
	<div class="table-responsive">
		<table class="table darkbgwhitetext">
			<thead>
				<tr>
					<th scope="col">Points</th>
					<th scope="col">Description</th>
					<th scope="col">Added By User</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var point in Model.Entities)
				{
					<partial name="_PointTablePartial" model="@point" />
				}
			</tbody>
		</table>
	</div>

	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalItemCount /
		Model.ItemsPerPage);

	<div class="row mb-5">
		<div class="col-md-4 justify-content-md-start">
			<a class="btn btn-success @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-action="ViewPointsHistory"
		   asp-route-currentPage="@previousPage"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-searchPoints="@Model.SearchPoints",
		   asp-route-searchUserEmail="@Model.SearchUserEmail">Previous page</a>
		</div>

		<div class="col-md-4 text-center">
			<p>Page @Model.CurrentPage of @maxPage</p>
		</div>

		@{
			var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
			!Model.Entities.Any();
		}

		<div class="col-md-4">
			<a class="btn btn-success float-end
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-action="ViewPointsHistory"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-searchPoints="@Model.SearchPoints" ,
		   asp-route-searchUserEmail="@Model.SearchUserEmail">Next page</a>
		</div>
	</div>
}